package com.demo.common.model;

import java.util.List;

import com.demo.common.model.base.BaseContract;
import com.szcarshop.util.StringUtil;

/**
 * Generated by JFinal.
 */
@SuppressWarnings("serial")
public class Contract extends BaseContract<Contract> {
	public static final Contract dao = new Contract().dao();
	
	public List<Contract> find() {
		String sql = "SELECT c.*,u.nick_name,b.name brand_name FROM contract c "+
					"LEFT JOIN users u ON u.id = c.user_id "+
					"LEFT JOIN brand b ON b.id = c.brand_id "+
					" ORDER BY c.share_date DESC";
		return Contract.dao.find(sql);
	}
	public List<Contract> findByThreePara(String title,String startDate,String endDate) {
		StringBuffer sql = new StringBuffer("SELECT c.*,u.nick_name,b.name brand_name FROM contract c "+
											"LEFT JOIN users u ON u.id = c.user_id "+
											"LEFT JOIN brand b ON b.id = c.brand_id "+
											" where true");
		if(StringUtil.isNotEmpty(title)){
			sql.append(" and c.title LIKE '%"+title.trim()+"%'");
		}
		if(StringUtil.isNotEmpty(startDate)){
			sql.append(" and c.share_date >= '"+startDate.trim()+"'");
		}
		if(StringUtil.isNotEmpty(endDate)){
			sql.append(" and c.share_date <= '"+endDate.trim()+"'");
		}
		sql.append(" ORDER BY c.share_date DESC");
		System.out.println(sql.toString());
		return Contract.dao.find(sql.toString());
	}
	public Contract findById(int id){
		String sql = "SELECT c.*,u.nick_name,b.name brand_name FROM contract c "+
				"LEFT JOIN users u ON u.id = c.user_id "+
				"LEFT JOIN brand b ON b.id = c.brand_id where c.id = "+id;
		return dao.findFirst(sql);
	}
	public Integer findIsPayGoldCoin(Integer contractId, Integer userId) {
		String sql = "SELECT * FROM contract_authority ca " +
				"LEFT JOIN contract c ON c.id = ca.contract_id " +
				"WHERE ca.pay_id = 1 AND c.review_id = 1 " +
				"AND ca.user_id = "+userId+" AND c.id = " + contractId;
		return dao.findFirst(sql)==null ? 0 : 1;
	}
}
